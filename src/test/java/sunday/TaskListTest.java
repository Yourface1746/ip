package sunday;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;
import task.Task;
import task.Todo;

import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

/** A minimal storage stub that records saves.
 * Generated by ChatGPT
 * */
class TestStorage extends Storage {
    int saves = 0;
    List<Task> lastSaved = new ArrayList<>();

    TestStorage(String path) { super(path); }

    @Override
    public void save(List<Task> tasks) {
        saves++;
        lastSaved = new ArrayList<>(tasks);
    }
}

class TaskListTest {

    @TempDir
    Path tmp;

    private TestStorage storage() {
        return new TestStorage(tmp.resolve("tasks.txt").toString());
    }

    @Test
    void add_increasesSize_andPersists() {
        TaskList list = new TaskList();
        TestStorage s = storage();

        list.add(new Todo("read", false), s);
        assertEquals(1, list.size());
        assertEquals(1, s.saves);
        assertEquals("read", s.lastSaved.get(0).getTaskName());
    }

    @Test
    void insertAt_insertsAtIndex_andPersists() {
        TaskList list = new TaskList();
        TestStorage s = storage();

        list.add(new Todo("a", false), s);
        list.add(new Todo("c", false), s);
        list.insertAt(1, new Todo("b", false), s);

        assertEquals(3, list.size());
        assertEquals("b", list.get(1).getTaskName());
        assertEquals(3, s.lastSaved.size());
    }

    @Test
    void delete_removes_andReturnsDeleted() {
        TaskList list = new TaskList();
        TestStorage s = storage();

        list.add(new Todo("x", false), s);
        Task deleted = list.delete(0, s);

        assertEquals("x", deleted.getTaskName());
        assertEquals(0, list.size());
    }

    @Test
    void setAsDone_updatesState_andPersists() {
        TaskList list = new TaskList();
        TestStorage s = storage();

        list.add(new Todo("x", false), s);
        list.setAsDone(0, true, s);

        assertTrue(list.get(0).isDone());
        assertTrue(s.lastSaved.get(0).isDone());
    }
}

